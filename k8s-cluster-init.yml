- name: Cluster initialization on master
  hosts: master
  vars_files:
  - env_variables

  tasks:
    - name: Resetting previous cluster
      shell: kubeadm reset -f
      become: yes

    - name: Cluster initialization
      shell: kubeadm init --pod-network-cidr 10.244.0.0/16 --apiserver-advertise-address {{ansible_eth1.ipv4.address}} --token {{token}}
      become: yes

    # - name: create .kube directory for root user
    #   file:
    #     path: $HOME/.kube
    #     state: directory
    #     mode: 0755

    # - name: copy k8s conf to root kube config
    #   copy:
    #     src: /etc/kubernetes/admin.conf
    #     dest: $HOME/.kube/config
    #     remote_src: true

    - name: create .kube directory for vagrant user
      file:
        path: /home/vagrant/.kube
        state: directory
        mode: 0755

    - name: copy k8s conf to vagrant user kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        remote_src: true
      become: yes

    - name: Installing a Pod network
      shell: kubectl apply -f {{pod_url}}

    - name: Patching a Pod network
      shell: |
        kubectl patch daemonsets kube-flannel-ds-amd64 -n kube-system \
        --patch='{"spec":{"template":{"spec":{"containers":[{"name":"kube-flannel","args":["--ip-masq","--kube-subnet-mgr","--iface=eth1"]}]}}}}'
    
    - name: Restart a Pod network
      shell: kubectl rollout restart daemonsets -n kube-system kube-flannel-ds-amd64

    - name: Untain master isolation
      shell: kubectl taint nodes --all node-role.kubernetes.io/master-

    - name: Add node master label worker
      shell: kubectl patch node master --patch='{"metadata":{"labels":{"node-role.kubernetes.io/worker":""}}}'

    - name: Deploying Dashboard
      shell: kubectl apply -f {{dashboard_url}}   

    - name: Copy a Docker daemon.json
      copy:
        src: dashboard-admin.yaml
        dest: /tmp/dashboard-admin.yaml

    - name: Creating Service Account for Dashboard
      shell: kubectl apply -f /tmp/dashboard-admin.yaml  

    - name: Exposing Dashboard to Nodeport 32500
      shell: |
        kubectl patch svc -n kubernetes-dashboard kubernetes-dashboard \
          --patch='{"spec":{"type":"NodePort","ports":[{"nodePort":32500,"port":443,"protocol":"TCP","targetPort":8443}]}}'

    - name: Getting Service Account token
      shell: |
        kubectl -n kube-system describe secret \
          $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') | grep ^token | awk '{print $2}'
      register: output

    - name: Storing token
      local_action: copy content={{ output.stdout }} dest=/home/student/ansible/dashboard_token

    - name: Deploying Ingress Controller resources
      shell: |
        kubectl apply -f {{ingress_controller_url}}
        kubectl apply -f {{ingress_service_url}}

    - name: Assingning ingress to master IP
      shell: |
        kubectl patch svc ingress-nginx -n ingress-nginx --patch '{"spec":{"externalIPs":["{{ansible_eth1.ipv4.address}}"]}}'

    - name: Copy admin config to vagrant dir
      copy:
        src: $HOME/.kube/config
        dest: /vagrant/admin-config
        remote_src: true
