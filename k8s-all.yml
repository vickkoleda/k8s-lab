- name: Initial Docker deploy for Vagrant VM
  hosts: k8s-cluster
  become: yes

  tasks:
  - name: Add Docker repo
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo

  - name: Enable Docker Edge repo
    ini_file:
      dest: /etc/yum.repos.d/docer-ce.repo
      section: 'docker-ce-edge'
      option: enabled
      value: 0

  - name: Ensure a list of packages installed
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - deltarpm
      - epel-release
      - wget 
      - ntp 
      - jq 
      - net-tools
      - bind-utils 
      - moreutils
      - docker-ce

  - name: Add user vagrant to docker group
    user:
      name: vagrant
      groups: docker
      append: yes
  
  - name: Start Docker service
    service:
      name: docker
      state: started
      enabled: yes

  - name: Start Ntpd service
    service:
      name: ntpd
      state: started
      enabled: yes

  - name: Disable SELinux
    selinux:
      state: disabled

  - name: Remove swapfile from /etc/fstab
    mount:
      name: swap
      fstype: swap
      state: absent

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - stat: path=/etc/yum.repos.d/kubernetes.repo
    register: kuberepo

  - name: Create Kubernetes repo file if not exist.
    file: 
      path=/etc/yum.repos.d/kubernetes.repo
      owner=root
      group=root
      mode=0644
      state={{ "file" if  kuberepo.stat.exists else "touch"}}

  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
      path: /etc/yum.repos.d/kubernetes.repo
      block: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  
  - name: Copy a Docker daemon.json
    copy:
      src: daemon.json
      dest: /etc/docker/daemon.json
      owner: root
      group: root
      mode: '0644'
    register: daemonconfig
    
  - name: Ensure a list of kubernetes packages installed
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni

  - name: Add fix for Vagrant
    replace:
      path: /etc/sysconfig/kubelet
      regexp: '=.*'
      replace: '=--node-ip={{ ansible_eth1.ipv4.address }}'

  - name: Restart Docker service
    service:
      name: docker
      state: restarted
    when: daemonconfig.changed

  - name: Enable Kubelet service
    service:
      name: kubelet
      enabled: yes

  - name: Adding setting to enable passing bridged IPv4 traffic to iptables' chain
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      sysctl_file: /etc/sysctl.d/docker.conf
      reload: no

  - name: Adding setting to enable passing bridged IPv6 traffic to iptables' chain
    sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      sysctl_file: /etc/sysctl.d/docker.conf
      reload: yes  

- name: Cluster initialization on master
  hosts: master
  vars_files:
  - env_variables

  tasks:
    - name: Resetting previous cluster
      shell: kubeadm reset -f
      become: yes

    - name: Cluster initialization
      shell: kubeadm init --pod-network-cidr 10.244.0.0/16 --apiserver-advertise-address {{ansible_eth1.ipv4.address}} --token {{token}}
      become: yes

    # - name: create .kube directory for root user
    #   file:
    #     path: $HOME/.kube
    #     state: directory
    #     mode: 0755

    # - name: copy k8s conf to root kube config
    #   copy:
    #     src: /etc/kubernetes/admin.conf
    #     dest: $HOME/.kube/config
    #     remote_src: true

    - name: create .kube directory for vagrant user
      file:
        path: /home/vagrant/.kube
        state: directory
        mode: 0755

    - name: copy k8s conf to vagrant user kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        remote_src: true
      become: yes

    - name: Installing a Pod network
      shell: kubectl apply -f {{pod_url}}

    - name: Patching a Pod network
      shell: |
        kubectl patch daemonsets kube-flannel-ds-amd64 -n kube-system \
        --patch='{"spec":{"template":{"spec":{"containers":[{"name":"kube-flannel","args":["--ip-masq","--kube-subnet-mgr","--iface=eth1"]}]}}}}'
    
    - name: Restart a Pod network
      shell: kubectl rollout restart daemonsets -n kube-system kube-flannel-ds-amd64

    - name: Untain master isolation
      shell: kubectl taint nodes --all node-role.kubernetes.io/master-

    - name: Add node master label worker
      shell: kubectl patch node master --patch='{"metadata":{"labels":{"node-role.kubernetes.io/worker":""}}}'

    - name: Deploying Dashboard
      shell: kubectl apply -f {{dashboard_url}}   

    - name: Copy a Docker daemon.json
      copy:
        src: dashboard-admin.yaml
        dest: /tmp/dashboard-admin.yaml

    - name: Creating Service Account for Dashboard
      shell: kubectl apply -f /tmp/dashboard-admin.yaml  

    - name: Exposing Dashboard to Nodeport 32500
      shell: |
        kubectl patch svc -n kubernetes-dashboard kubernetes-dashboard \
          --patch='{"spec":{"type":"NodePort","ports":[{"nodePort":32500,"port":443,"protocol":"TCP","targetPort":8443}]}}'

    - name: Getting Service Account token
      shell: |
        kubectl -n kube-system describe secret \
          $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') | grep ^token | awk '{print $2}'
      register: output

    - name: Storing token
      local_action: copy content={{ output.stdout }} dest=/home/student/ansible/dashboard_token

    - name: Deploying Ingress Controller resources
      shell: |
        kubectl apply -f {{ingress_controller_url}}
        kubectl apply -f {{ingress_service_url}}

    - name: Assingning ingress to master IP
      shell: |
        kubectl patch svc ingress-nginx -n ingress-nginx --patch '{"spec":{"externalIPs":["{{ansible_eth1.ipv4.address}}"]}}'

    - name: Copy admin config to vagrant dir
      copy:
        src: $HOME/.kube/config
        dest: /vagrant/admin-config
        remote_src: true

- name: Configuring control machine
  hosts: worker
  vars_files:
    - env_variables
  
  tasks:
  
  - name: Joining to cluster
    shell: kubeadm join --token {{token}} --discovery-token-unsafe-skip-ca-verification --skip-phases=preflight 192.168.56.224:6443
    become: yes

- name: Configuring control machine
  hosts: 192.168.56.1
  become: yes

  tasks:
  - stat: path=/etc/yum.repos.d/kubernetes.repo
    register: kuberepo

  - name: Create Kubernetes repo file if not exist.
    file: 
      path=/etc/yum.repos.d/kubernetes.repo
      owner=root
      group=root
      mode=0644
      state={{ "file" if  kuberepo.stat.exists else "touch"}}

  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
      path: /etc/yum.repos.d/kubernetes.repo
      block: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: Ensure a list of packages installed
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - kubectl
      - bash-completion

  - name: create .kube directory for student user
    file:
      path: /home/student/.kube
      state: directory
      mode: 0755

  - name: copy k8s conf to student dir
    copy:
      src: admin-config
      dest: /home/student/.kube/config
      owner: student
      group: student

  - name: Add node worker label worker
    shell: |
      kubectl patch node worker --patch='{"metadata":{"labels":{"node-role.kubernetes.io/worker":""}}}'  
