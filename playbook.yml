- name: Initial Azure Resources deployment
  hosts: localhost
  roles:
  - azure-init

  tasks:
  - add_host:
      hostname: "{{item.ansible_facts.azure_vm.name}}"
      ansible_host: "{{item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress}}"
      ansible_connection: paramiko
      ansible_user: "{{admin_username}}"
      external_ip: "{{azure_pip_deploy.results[0].state.ip_address}}"
      groups:
      - masters
    with_items:
    - "{{azure_vm_deploy.results[0]}}"
    loop_control: 
      label: "{{item.ansible_facts.azure_vm.name}}"
    changed_when: no

  - add_host:
      hostname: "{{item.ansible_facts.azure_vm.name}}"
      ansible_host: "{{item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress}}"
      ansible_connection: paramiko
      ansible_user: "{{admin_username}}"
      groups:
      - workers
    with_items:
    - "{{azure_vm_deploy.results[1:]}}"
    loop_control: 
      label: "{{item.ansible_facts.azure_vm.name}}"
    changed_when: no

  - debug: var=groups['masters']
    # tags:
    # - never
    # - debug

  - debug: var=groups['workers']
    # tags:
    # - never
    # - debug

- name: Initial Deployment
  hosts: masters:workers
  roles:
  - k8s-base

- name: Cluster initialization
  hosts: masters
  become: yes
  roles:
  - k8s-init

- name: Prepare Kubectl client
  hosts: masters
  roles:
  - k8s-client

- name: Deploy network
  hosts: masters
  roles:
  - k8s-net

- name: Join nodes
  hosts: workers
  become: yes
  roles:
  - k8s-worker

- name: Deploy infrastructure
  hosts: masters
  roles:
  - k8s-labels

- name: Upload admin.conf to Storage Account
  hosts: localhost
  tasks:
  - name: Create container and upload a file
    azure_rm_storageblob:
      resource_group: "{{name_prefix}}-rg"
      storage_account_name: "{{'st' ~ name_prefix | regex_replace ('-')}}"
      container: kubernetes
      blob: admin.conf
      src: admin.conf
      public_access: container